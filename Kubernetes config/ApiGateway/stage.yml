---
# Config
apiVersion: v1
kind: ConfigMap
metadata:
  name: api-gateway-config
data:
  spring.profiles.active: "dev"
  SERVER_PORT: "8083"
  USER_SERVICE_ENDPOINT: "user-service"
  DOC_SERVICE_ENDPOINT: "doc-service"

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api-gateway-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api-gateway-service
  template:
    metadata:
      labels:
        app: api-gateway-service
    spec:
      containers:
      - name: api-gateway-service
        image: mohitcse/microservices:api_gateway-v1.0
        ports:
        - containerPort: 8083
        envFrom:
        - configMapRef:
            name: api-gateway-config
        resources:
          limits:
            cpu: "500m"
      imagePullSecrets:
        - name: regcred #docker registery secret

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: api-gateway-service
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  selector:
    app: api-gateway-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8083

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: stage
  name: api-gateway-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  rules:
  - host: api.mohit
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: api-gateway-service
            port:
              number: 8083