---
# Config
apiVersion: v1
kind: ConfigMap
metadata:
  name: doc-service-config
data:
  ES_CLUSTER_NODE: "<es_node>:<port>"
  MINIO_NODE: "http://<minio_node>:<port>"
  spring.profiles.active: "<profile>"
  SERVER_PORT: "8082"
  USER_SERVICE_ENDPOINT: "user-service"
  MINIO_BUCKET: <bucket>

---
# Secrets in base64
apiVersion: v1
kind: Secret
metadata:
  name: doc-service-secrets
type: Opaque
data:
  MINIO_USER:  <minio_user>
  MINIO_PASSWORD: <minio_password>

---
# Deployment
apiVersion: apps/v1
kind: Deployment
metadata:
  name: doc-service-deployment
spec:
  replicas: 1
  selector:
    matchLabels:
      app: doc-service
  template:
    metadata:
      labels:
        app: doc-service
    spec:
      containers:
      - name: doc-service
        image: mohitcse/microservices:doc_service-v1.0
        ports:
        - containerPort: 8082
        envFrom:
        - secretRef:
            name: doc-service-secrets
        - configMapRef:
            name: doc-service-config
        resources:
          limits:
            cpu: "500m"
      imagePullSecrets:
        - name: regcred #docker registery secret

---
# Service
apiVersion: v1
kind: Service
metadata:
  name: doc-service
spec:
  type: ClusterIP
  internalTrafficPolicy: Cluster
  selector:
    app: doc-service
  ports:
  - protocol: TCP
    port: 80
    targetPort: 8082

---
# Ingress
apiVersion: networking.k8s.io/v1
kind: Ingress
metadata:
  namespace: stage
  name: doc-service-ingress
  annotations:
    kubernetes.io/ingress.class: "nginx"
    nginx.ingress.kubernetes.io/proxy-body-size: "0"
    nginx.ingress.kubernetes.io/backend-protocol: "HTTP"
    nginx.ingress.kubernetes.io/ssl-passthrough: "true"
spec:
  rules:
  - host: doc-service-stage.mohit
    http:
      paths:
      - path: /
        pathType: Prefix
        backend:
          service:
            name: doc-service
            port:
              number: 8082
